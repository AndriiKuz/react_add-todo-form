{"version":3,"sources":["api/users.ts","components/UserInfo/UserInfo.tsx","components/TodoInfo/TodoInfo.tsx","components/TodoList/TodoList.tsx","App.tsx","api/todos.ts","index.tsx"],"names":["id","name","username","email","UserInfo","user","className","href","TodoInfo","todo","completed","title","cn","TodoList","todos","map","getUserById","userId","usersFromServer","find","App","useState","todosToRender","setTodosToRender","setTitle","hasTitleError","setHasTitleError","selectedUser","setSelectedUser","hasUserError","setHasUserError","lastTodoId","Math","max","action","method","onSubmit","e","todoTitle","preventDefault","htmlFor","type","placeholder","value","onChange","target","disabled","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.4f97ec11.chunk.js","sourcesContent":["export default [\n  {\n    id: 1,\n    name: 'Leanne Graham',\n    username: 'Bret',\n    email: 'Sincere@april.biz',\n  },\n  {\n    id: 2,\n    name: 'Ervin Howell',\n    username: 'Antonette',\n    email: 'Shanna@melissa.tv',\n  },\n  {\n    id: 3,\n    name: 'Clementine Bauch',\n    username: 'Samantha',\n    email: 'Nathan@yesenia.net',\n  },\n  {\n    id: 4,\n    name: 'Patricia Lebsack',\n    username: 'Karianne',\n    email: 'Julianne.OConner@kory.org',\n  },\n  {\n    id: 5,\n    name: 'Chelsey Dietrich',\n    username: 'Kamren',\n    email: 'Lucio_Hettinger@annie.ca',\n  },\n  {\n    id: 6,\n    name: 'Mrs. Dennis Schulist',\n    username: 'Leopoldo_Corkery',\n    email: 'Karley_Dach@jasper.info',\n  },\n  {\n    id: 7,\n    name: 'Kurtis Weissnat',\n    username: 'Elwyn.Skiles',\n    email: 'Telly.Hoeger@billy.biz',\n  },\n  {\n    id: 8,\n    name: 'Nicholas Runolfsdottir V',\n    username: 'Maxime_Nienow',\n    email: 'Sherwood@rosamond.me',\n  },\n  {\n    id: 9,\n    name: 'Glenna Reichert',\n    username: 'Delphine',\n    email: 'Chaim_McDermott@dana.io',\n  },\n  {\n    id: 10,\n    name: 'Clementina DuBuque',\n    username: 'Moriah.Stanton',\n    email: 'Rey.Padberg@karina.biz',\n  },\n];\n","import React from 'react';\nimport { User } from '../../types';\n\ntype Props = {\n  user: User;\n};\n\nexport const UserInfo: React.FC<Props> = ({ user }) => {\n  const { email, name } = user;\n\n  return (\n    <a className=\"UserInfo\" href={`mailto:${email}`}>\n      {name}\n    </a>\n  );\n};\n","import React from 'react';\nimport cn from 'classnames';\nimport { CombinedTodo } from '../../types';\nimport { UserInfo } from '../UserInfo';\n\ntype Props = {\n  todo: CombinedTodo;\n};\n\nexport const TodoInfo: React.FC<Props> = ({ todo }) => {\n  const {\n    id,\n    completed,\n    title,\n    user,\n  } = todo;\n\n  return (\n    <article\n      data-id={id}\n      className={cn('TodoInfo', {\n        'TodoInfo--completed': completed,\n      })}\n    >\n      <h2 className=\"TodoInfo__title\">\n        {title}\n      </h2>\n\n      {user && <UserInfo user={user} />}\n    </article>\n  );\n};\n","import React from 'react';\nimport { TodoInfo } from '../TodoInfo';\nimport { CombinedTodo } from '../../types';\n\ntype Props = {\n  todos: CombinedTodo[];\n};\n\nexport const TodoList: React.FC<Props> = ({ todos }) => (\n  <section className=\"TodoList\">\n    {todos.map(todo => (\n      <TodoInfo todo={todo} key={todo.id} />\n    ))}\n  </section>\n);\n","import './App.scss';\nimport { useState } from 'react';\nimport { User, Todo, CombinedTodo } from './types';\n\nimport usersFromServer from './api/users';\nimport todosFromServer from './api/todos';\n\nimport { TodoList } from './components/TodoList';\n\nconst getUserById = (userId: number): User | undefined => (\n  usersFromServer.find(user => user.id === userId)\n);\n\nconst todos: CombinedTodo[] = todosFromServer.map((todo: Todo) => (\n  {\n    ...todo,\n    user: getUserById(todo.userId),\n  }\n));\n\nexport const App = () => {\n  const [todosToRender, setTodosToRender] = useState<CombinedTodo[]>(todos);\n  const [title, setTitle] = useState('');\n  const [hasTitleError, setHasTitleError] = useState(false);\n  const [selectedUser, setSelectedUser] = useState(0);\n  const [hasUserError, setHasUserError] = useState(false);\n\n  const lastTodoId = Math.max(...todosToRender.map(todo => todo.id));\n\n  const handleTitleInput = (e: React.ChangeEvent<HTMLInputElement>) => {\n    setTitle(e.target.value);\n    setHasTitleError(false);\n  };\n\n  const handleSelectedUserInput = (e: React.ChangeEvent<HTMLSelectElement>) => {\n    setSelectedUser(+e.target.value);\n    setHasUserError(false);\n  };\n\n  const errorToggle = () => {\n    setHasTitleError(!title);\n    setHasUserError(!selectedUser);\n  };\n\n  const addNewTodo = (todoTitle: string, userId: number) => {\n    setTodosToRender([\n      ...todosToRender, {\n        id: lastTodoId + 1,\n        title: todoTitle,\n        completed: false,\n        userId,\n        user: getUserById(userId),\n      }]);\n  };\n\n  const resetForm = () => {\n    setTitle('');\n    setHasTitleError(false);\n    setSelectedUser(0);\n    setHasUserError(false);\n  };\n\n  const handleFormSubmit = (e: React.FormEvent<HTMLFormElement>) => {\n    e.preventDefault();\n    errorToggle();\n\n    if (!title || !selectedUser) {\n      return;\n    }\n\n    addNewTodo(title, selectedUser);\n    resetForm();\n  };\n\n  return (\n    <div className=\"App\">\n      <h1>Add todo form</h1>\n\n      <form\n        action=\"/api/todos\"\n        method=\"POST\"\n        onSubmit={handleFormSubmit}\n      >\n        <div className=\"field\">\n          <label htmlFor=\"title\">Title: </label>\n          <input\n            id=\"title\"\n            type=\"text\"\n            data-cy=\"titleInput\"\n            placeholder=\"Enter a title\"\n            value={title}\n            onChange={handleTitleInput}\n          />\n          {hasTitleError && <span className=\"error\">Please enter a title</span>}\n        </div>\n\n        <div className=\"field\">\n          <label htmlFor=\"user\">User: </label>\n          <select\n            id=\"user\"\n            data-cy=\"userSelect\"\n            value={selectedUser}\n            onChange={handleSelectedUserInput}\n          >\n            <option\n              value={0}\n              disabled\n            >\n              Choose a user\n            </option>\n\n            {usersFromServer.map((user: User) => (\n              <option\n                key={user.id}\n                value={user.id}\n              >\n                {user.name}\n              </option>\n            ))}\n          </select>\n\n          {hasUserError && <span className=\"error\">Please choose a user</span>}\n        </div>\n\n        <button type=\"submit\" data-cy=\"submitButton\">\n          Add\n        </button>\n\n        <TodoList todos={todosToRender} />\n      </form>\n    </div>\n  );\n};\n","export default [\n  {\n    id: 1,\n    title: 'delectus aut autem',\n    completed: true,\n    userId: 1,\n  },\n  {\n    id: 15,\n    title: 'some other todo',\n    completed: false,\n    userId: 1,\n  },\n  {\n    id: 2,\n    title: 'quis ut nam facilis et officia qui',\n    completed: false,\n    userId: 4,\n  },\n];\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}